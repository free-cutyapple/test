# name: Auto Back Merge Cron

# on:
#   schedule:
#     - cron: "*/5 * * * *"

# jobs:
#   cron_schedule:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0

#       - name: Merge Main to Branches
#         run: |
#           echo "Run Auto-Merge script."

#           BRANCHES=("main" "staging" "dev")

#           for ((i=0; i<${#BRANCHES[@]}-1; i++)); do
#             catch() {
#                 echo "$BRANCH에서 하자 발생!"
#                 curl -H 'Content-type: application/json' \
#                 --data '{"text":"Git actions - Auto Merge 중 에러가 발생했습니다."}' \
#                 -H "Authorization: Bearer ${{ github.token}}" \
#                 -X POST ${{ secrets.SLACK_FE_AUTO_BOT_WEBHOOK_URL }}
#                 return 0
#             }

#             trap catch ERR

#             SOURCE_BRANCH=${BRANCHES[i]}
#             TARGET_BRANCH=${BRANCHES[i+1]}

#             if git diff --quiet origin/$SOURCE_BRANCH..origin/$TARGET_BRANCH --; then
#               echo "No changes detected: $SOURCE_BRANCH to $TARGET_BRANCH"
#               continue
#             fi

#             echo "Merge $SOURCE_BRANCH to $TARGET_BRANCH branch"

#             MERGE_RESPONSE=$(curl -i -L \
#               -X POST -H "Accept: application/vnd.github+json" \
#               -H "Authorization: Bearer ${{github.token}}" \
#               -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/merges \
#               -d '{"base":"'"$TARGET_BRANCH"'", "head": "'"$SOURCE_BRANCH"'", "commit_message": "Merge '$SOURCE_BRANCH' to '$TARGET_BRANCH'"}')

#             echo $MERGE_RESPONSE

#             STATUS_CODE=$(echo "$MERGE_RESPONSE" | grep -o -P '(?<=HTTP/2 )[0-9]+')

#             if [ $STATUS_CODE -ge 200 ] && [ $STATUS_CODE -lt 300 ]; then
#               echo "Merge successful: $SOURCE_BRANCH to $TARGET_BRANCH"
#               curl -X POST \
#                 -H 'Content-type: application/json' \
#                 --data '{"text":"🟢 [Merge Success] *'$SOURCE_BRANCH' to '$TARGET_BRANCH'*"}' \
#                 ${{ secrets.SLACK_FE_AUTO_BOT_WEBHOOK_URL }}

#             elif [ $STATUS_CODE == 409 ]; then
#               echo "Conflict detected: $SOURCE_BRANCH to $TARGET_BRANCH"
#               curl -X POST \
#                 -H 'Content-type: application/json' \
#                 --data '{"text":"🔴 [Merge Conflict] *'$SOURCE_BRANCH' to '$TARGET_BRANCH'*"}' \
#                 ${{ secrets.SLACK_FE_AUTO_BOT_WEBHOOK_URL }}

#             else
#               echo "Merge failed: $SOURCE_BRANCH to $TARGET_BRANCH"
#               curl -X POST \
#                 -H 'Content-type: application/json' \
#                 --data '{"text":"🔴 [Merge Failed] *'$SOURCE_BRANCH' to '$TARGET_BRANCH'*"}' \
#                 ${{ secrets.SLACK_FE_AUTO_BOT_WEBHOOK_URL }}
#             fi
#           done
