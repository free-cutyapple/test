name: Auto Merge PR

# on:
#   pull_request:
#     types:
#       - closed

on:
  pull_request:
    types:
      - opened

jobs:
  if_merged:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check if PR is closed
        id: doing
        run: |
          echo "Run Auto-Merge script."




          BRANCHES=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
          "https://api.github.com/repos/${{ github.repository }}/branches" | jq -r '.[].name')

          PR_NUMBER=$(jq -r '.pull_request.number' < "$GITHUB_EVENT_PATH")
          PR_STATE=$(jq -r '.pull_request.state' < "$GITHUB_EVENT_PATH")
          BRANCH_NAME=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" | jq -r '.head.ref')
          PREFIX=M2SP-2306-02

          echo "------------------------------------------"

          for BRANCH in $BRANCHES; do
            if [[ $BRANCH == "$PREFIX"* ]]; then
              catch() {
                echo "$BRANCH에서 하자 발생."
                # Slack 메시지 보내기
                # curl -X POST -H 'Content-type: application/json' --data '{"text":"예외가 발생했습니다."}' YOUR_SLACK_WEBHOOK_URL
                # exit 1
              }

              # trap 설정
              trap catch ERR

              echo "Merging PR $PR_NUMBER to $BRANCH branch"
              git config user.name github-actions
              git config user.email github-actions@github.com
              git checkout "$BRANCH"
              echo "Checkout $BRANCH"
              git merge "$BRANCH_NAME" --no-ff --no-commit
              git commit -m "Auto-merge PR #$PR_NUMBER to $BRANCH branch"
              git push origin "$BRANCH"
            fi
          done
